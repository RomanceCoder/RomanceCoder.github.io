<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Liuyu の blog</title><link>/</link><description>Recent content on Liuyu の blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 12 Jun 2024 15:53:57 +0800</lastBuildDate><atom:link href="/rss.xml" rel="self" type="application/rss+xml"/><item><title>世界，你好！</title><link>/post/hello-world.html</link><pubDate>Thu, 02 Jun 2022 11:52:03 +0800</pubDate><guid>/post/hello-world.html</guid><description>&lt;blockquote>
&lt;p>“使用 &lt;code>weight&lt;/code> 关键字置顶文章。”&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;a href="https://gohugo.io/" title="Hugo" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 Hugo
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a> 是现今世界上最快的网站建设框架，也是最流行的开源静态站点生成器之一。 凭借其惊人的速度和灵活性，Hugo 让建设网站再次变得有趣起来。&lt;/p></description></item><item><title>2160_rtt</title><link>/posts/2160_rtt/</link><pubDate>Wed, 12 Jun 2024 15:53:57 +0800</pubDate><guid>/posts/2160_rtt/</guid><description>rttcore的移植 问题记录 我在编2160大包的时候 build_docker_image -i 6 报错 Could not allocate block in ext2 filesystem Error copying file /work/build/ubuntu/rootfs_template/usr/bin/rttcore to /work/images/tmp/5g-ubuntu-core.ext4:usr/bin 问题思考 这个问题google了一下 据我所知，这种情况</description></item><item><title>Std_string</title><link>/posts/std_string/</link><pubDate>Thu, 06 Jun 2024 10:21:34 +0800</pubDate><guid>/posts/std_string/</guid><description>std::string 与 char[] 的相互转化 #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; int main() { // std::string -&amp;gt; char[] std::string cpp; char c[10] = &amp;#34;hello, c&amp;#34;; cpp = c; std::cout &amp;lt;&amp;lt; cpp &amp;lt;&amp;lt; std::endl; // hello, c // char[] -&amp;gt; std::string char c1[10] = {0}; std::string cpp1 = &amp;#34;hello, cpp&amp;#34;; strcpy(c1,cpp1.c_str()); std::cout &amp;lt;&amp;lt; c1 &amp;lt;&amp;lt; std::endl; // hello, cpp return 0; } std::string 与 char[] 的清空 st</description></item><item><title>Git</title><link>/posts/git/</link><pubDate>Sat, 01 Jun 2024 09:55:50 +0800</pubDate><guid>/posts/git/</guid><description>&lt;h2 id="以渺小启程-git">以渺小启程-Git
&lt;a class="header-anchor" href="#%e4%bb%a5%e6%b8%ba%e5%b0%8f%e5%90%af%e7%a8%8b-git">&lt;/a>
&lt;/h2>&lt;p>关于Git的神话 我就不再多说&lt;/p>
&lt;h2 id="git的参考资料">Git的参考资料
&lt;a class="header-anchor" href="#git%e7%9a%84%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99">&lt;/a>
&lt;/h2>&lt;blockquote>
&lt;p>&lt;Pro Git> &amp;ndash; 永远的圣经&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>
&lt;a href="https://learngitbranching.js.org/?locale=zh_CN" title="learning git" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
 learning git
 
 &lt;i class="fa fa-external-link-alt">&lt;/i>
 
&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>麦兜搞it[up主]&lt;/p>
&lt;/blockquote>
&lt;h2 id="git重点记录">Git重点记录
&lt;a class="header-anchor" href="#git%e9%87%8d%e7%82%b9%e8%ae%b0%e5%bd%95">&lt;/a>
&lt;/h2>&lt;p>一个远程仓库&lt;/p>
&lt;p>一个本地仓库&lt;/p>
&lt;h2 id="git指令记录">Git指令记录
&lt;a class="header-anchor" href="#git%e6%8c%87%e4%bb%a4%e8%ae%b0%e5%bd%95">&lt;/a>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git branch &lt;span style="color:#7f848e"># 列出本地仓库的分支&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git branch -r &lt;span style="color:#7f848e"># 列出本地仓库的远程分支&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git brach -a &lt;span style="color:#7f848e"># 列出本地仓库的分支和远程分支&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git push &lt;span style="color:#7f848e"># 将本地仓库的当前分支推送到远程仓库的分支上 注意! 如果当前分支 没有先于 远程分支，会被拒绝 -f&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git fetch &lt;span style="color:#7f848e"># 将远程仓库上 本地没有的 分支(包括tag) 以及 它们对应commit 都下载下来。换言仓库上没有的，本地有的，就不会动了&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Deep Copy</title><link>/posts/deep-copy/</link><pubDate>Mon, 27 May 2024 17:34:15 +0800</pubDate><guid>/posts/deep-copy/</guid><description>开发中的困惑 最近在写这样的代码的时候 产生了一个疑问？ 如下代码会发生浅拷贝吗？ struct Buffer { UINT32 verify; UINT8 src; UINT8 dest; UINT8 type; UINT32 length; UINT32 num; char data[MAX_DATA_SIZE]; }; class Msg { private: Buffer buf; public: Msg(); void init(const char *data, INT32 data_len);</description></item><item><title>Git Bash</title><link>/posts/git-bash/</link><pubDate>Mon, 27 May 2024 13:45:50 +0800</pubDate><guid>/posts/git-bash/</guid><description>&lt;p>git-bash&lt;/p></description></item><item><title>Master Talk</title><link>/posts/master-talk/</link><pubDate>Mon, 27 May 2024 09:26:20 +0800</pubDate><guid>/posts/master-talk/</guid><description>侯捷先生讲座, 与大家共勉. ● 「程序人生」演讲内容摘要。 如果你不曾听过侯捷的名字，不曾知道侯捷做的事情，你不可能有兴趣走入会场。因此，各位远道</description></item><item><title>argc</title><link>/posts/argc/</link><pubDate>Fri, 24 May 2024 19:57:11 +0800</pubDate><guid>/posts/argc/</guid><description>C中的argc和argv #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;basetsd.h&amp;gt; int main(int argc, char * argv[]) { std::cout &amp;lt;&amp;lt; &amp;#34;Hello, World!&amp;#34; &amp;lt;&amp;lt; std::endl; for (int i = 0; i &amp;lt; argc; ++i) { printf(&amp;#34;%d:%s\n&amp;#34;, i, argv[i]); } printf(&amp;#34;parse hex:\n&amp;#34;); UINT32 hex; sscanf(argv[1], &amp;#34;0x%x&amp;#34;, &amp;amp;hex); printf(&amp;#34;0x%x\n&amp;#34;, hex); printf(&amp;#34;parse double:\n&amp;#34;); double f0; sscanf(argv[2], &amp;#34;%lf&amp;#34;, &amp;amp;f0); printf(&amp;#34;%lf\n&amp;#34;, f0); return 0; }</description></item><item><title>git_tag</title><link>/posts/git_tag/</link><pubDate>Wed, 15 May 2024 17:57:58 +0800</pubDate><guid>/posts/git_tag/</guid><description>本地仓库打tag 本地仓库打标签可以用附注标签或者轻量标签 然后更新远端 附注标签 git tag -a V3.0.1 -m &amp;#34;V3.0.3&amp;#34; # git tag -a &amp;lt;tag-name&amp;gt; -m &amp;#34;...&amp;#34; 轻量标签 git tag V3.0.1 # git tag &amp;lt;tag-name&amp;gt; 更新远端方式一 git</description></item><item><title>printf</title><link>/posts/printf/</link><pubDate>Sat, 11 May 2024 08:14:21 +0800</pubDate><guid>/posts/printf/</guid><description>C语言中的printf 我们常常使用C中标准库自带的printf打印内容 例如： #include &amp;lt;stdio.h&amp;gt; int main(){ printf(&amp;#34;hello,world\n&amp;#34;); return 0; } C语言中的printf打印十六进制 #include &amp;lt;stdio.h&amp;gt; int main(){ printf(&amp;#34;0x%x | 0x%X</description></item></channel></rss>