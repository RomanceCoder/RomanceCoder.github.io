<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Liuyu の blog</title><link>/categories/c++/</link><description>Recent content in C++ on Liuyu の blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 12 Jun 2024 15:53:57 +0800</lastBuildDate><atom:link href="/categories/c++/rss.xml" rel="self" type="application/rss+xml"/><item><title>2160_rtt</title><link>/posts/2160_rtt/</link><pubDate>Wed, 12 Jun 2024 15:53:57 +0800</pubDate><guid>/posts/2160_rtt/</guid><description>rttcore的移植 问题记录 我在编2160大包的时候 build_docker_image -i 6 报错 Could not allocate block in ext2 filesystem Error copying file /work/build/ubuntu/rootfs_template/usr/bin/rttcore to /work/images/tmp/5g-ubuntu-core.ext4:usr/bin 问题思考 这个问题google了一下 据我所知，这种情况</description></item><item><title>Std_string</title><link>/posts/std_string/</link><pubDate>Thu, 06 Jun 2024 10:21:34 +0800</pubDate><guid>/posts/std_string/</guid><description>std::string 与 char[] 的相互转化 #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; int main() { // std::string -&amp;gt; char[] std::string cpp; char c[10] = &amp;#34;hello, c&amp;#34;; cpp = c; std::cout &amp;lt;&amp;lt; cpp &amp;lt;&amp;lt; std::endl; // hello, c // char[] -&amp;gt; std::string char c1[10] = {0}; std::string cpp1 = &amp;#34;hello, cpp&amp;#34;; strcpy(c1,cpp1.c_str()); std::cout &amp;lt;&amp;lt; c1 &amp;lt;&amp;lt; std::endl; // hello, cpp return 0; } std::string 与 char[] 的清空 st</description></item><item><title>Deep Copy</title><link>/posts/deep-copy/</link><pubDate>Mon, 27 May 2024 17:34:15 +0800</pubDate><guid>/posts/deep-copy/</guid><description>开发中的困惑 最近在写这样的代码的时候 产生了一个疑问？ 如下代码会发生浅拷贝吗？ struct Buffer { UINT32 verify; UINT8 src; UINT8 dest; UINT8 type; UINT32 length; UINT32 num; char data[MAX_DATA_SIZE]; }; class Msg { private: Buffer buf; public: Msg(); void init(const char *data, INT32 data_len);</description></item></channel></rss>